{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Work\\\\Anees\\\\EA Fitness\\\\app\\\\application\\\\screens\\\\Calculator.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Slider } from \"react-native-web/dist/index\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Grid, Row } from 'react-native-easy-grid';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem } from 'native-base';\nimport CalcResult from \"../components/CalcResult\";\nimport CalcSlider from \"../components/CalcSlider\";\nimport ConfigApp from \"../utils/ConfigApp\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Calculator = function (_Component) {\n  _inherits(Calculator, _Component);\n\n  var _super = _createSuper(Calculator);\n\n  function Calculator(props) {\n    var _this;\n\n    _classCallCheck(this, Calculator);\n\n    _this = _super.call(this, props);\n\n    _this.heightChange = function (height) {\n      _this.setState({\n        height: height\n      }, _this.setBmi);\n    };\n\n    _this.weightChange = function (weight) {\n      _this.setState({\n        weight: weight\n      }, _this.setBmi);\n    };\n\n    _this.setBmi = function () {\n      var bmi = (_this.state.weight / _this.state.height / _this.state.height * 10000).toFixed(2);\n\n      _this.setState({\n        bmi: bmi,\n        bmiClass: _this.getBmiClass(bmi)\n      });\n    };\n\n    _this.getBmiClass = function (bmi) {\n      if (bmi < 18.5) return 'Underweight';\n      if (bmi >= 18.5 && bmi <= 24.9) return 'Normal';\n      if (bmi >= 25 && bmi <= 29.9) return 'Overweight';\n      if (bmi >= 30) return 'Obese';\n    };\n\n    _this.state = {\n      height: 175,\n      weight: 73,\n      bmi: 22.49,\n      bmiClass: 'Normal'\n    };\n    return _this;\n  }\n\n  _createClass(Calculator, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 1\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 1\n        }\n      }, \"Height\"), React.createElement(CalcSlider, {\n        value: this.state.height,\n        onChange: this.heightChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 1\n        }\n      }, \"Weight\"), React.createElement(CalcSlider, {\n        value: this.state.weight,\n        onChange: this.weightChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 1\n        }\n      }), React.createElement(CalcResult, {\n        data: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 1\n        }\n      }));\n    }\n  }]);\n\n  return Calculator;\n}(Component);\n\nCalculator.navigationOptions = {\n  title: 'Calculator'\n};\nexport { Calculator as default };","map":{"version":3,"sources":["F:/Work/Anees/EA Fitness/app/application/screens/Calculator.js"],"names":["React","Component","Slider","Ionicons","Grid","Row","Container","Text","Body","Right","List","ListView","Thumbnail","ListItem","CalcResult","CalcSlider","ConfigApp","styles","require","Dimensions","get","height","width","Calculator","props","heightChange","setState","setBmi","weightChange","weight","bmi","state","toFixed","bmiClass","getBmiClass","background_general","navigationOptions","title"],"mappings":"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","sourcesContent":[" import React, {Component} from 'react';\nimport{ Dimensions, View, Image, TouchableOpacity, Slider } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport {Grid, Row } from 'react-native-easy-grid';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem} from 'native-base';\n\nimport CalcResult from '../components/CalcResult';\nimport CalcSlider from '../components/CalcSlider';\n\n\nimport ConfigApp from '../utils/ConfigApp';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class Calculator extends Component {\n  static navigationOptions = {\n    title: 'Calculator',\n  };\n\n  constructor(props){\n    super(props); \n    this.state = {\n      height: 175,\n      weight: 73, \n      bmi: 22.49, \n      bmiClass: 'Normal'\n    }\n  }\n\n  heightChange = (height) => {\n    this.setState({ height: height}, this.setBmi ); \n  }\n\n  weightChange = (weight) => {\n    this.setState({ weight: weight }, this.setBmi ); \n  }\n\n  setBmi = () => {\n    let bmi = ((this.state.weight / this.state.height / this.state.height) * 10000).toFixed(2); \n    this.setState({ bmi: bmi, bmiClass: this.getBmiClass(bmi) }); \n  }\n\n  getBmiClass = (bmi) => {\n    if(bmi < 18.5) return 'Underweight'; \n    if(bmi >= 18.5 && bmi <= 24.9) return 'Normal'; \n    if(bmi >= 25 && bmi <= 29.9) return 'Overweight'; \n    if(bmi >= 30) return 'Obese';  \n  }\n\n  render() {\n\n    return (\n\n<Container style={styles.background_general}>\n\n<Text>Height</Text>\n            <CalcSlider \n              value={this.state.height} \n              onChange={this.heightChange} />\n\n<Text>Weight</Text>\n\n\n<CalcSlider \n              value={this.state.weight}\n              onChange={this.weightChange} />\n\n<CalcResult data={this.state}/>\n\n</Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}