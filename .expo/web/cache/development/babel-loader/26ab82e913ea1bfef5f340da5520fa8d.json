{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Work\\\\Anees\\\\EA Fitness\\\\app\\\\application\\\\screens\\\\Equipments.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Grid, Row } from 'react-native-easy-grid';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport Strings from \"../utils/Strings\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Equipments = function (_Component) {\n  _inherits(Equipments, _Component);\n\n  var _super = _createSuper(Equipments);\n\n  function Equipments(props) {\n    var _this;\n\n    _classCallCheck(this, Equipments);\n\n    _this = _super.call(this, props);\n\n    _this.ListExercisesByEquipment = function (equipment_id, equipment_title) {\n      _this.props.navigation.navigate('ExercisesByEquipmentScreen', {\n        IdEquipment: equipment_id,\n        TitleEquipment: equipment_title\n      });\n    };\n\n    _this.state = {\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(Equipments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch(ConfigApp.URL + 'json/data_equipments.php').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          isLoading: false,\n          dataSource: responseJson\n        }, function () {});\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        });\n      }\n\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 1\n        }\n      }, React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        refreshing: \"false\",\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(ListItem, {\n            style: {\n              paddingLeft: 0,\n              marginLeft: 0,\n              backgroundColor: '#FFF',\n              opacity: 1,\n              marginVertical: 10,\n              borderColor: 'rgba(0,0,0,0.05)',\n              borderBottomWidth: 1\n            },\n            onPress: _this3.ListExercisesByEquipment.bind(_this3, item.equipment_id, item.equipment_title),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }\n          }, React.createElement(Thumbnail, {\n            square: true,\n            size: 80,\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.equipment_image\n            },\n            style: {\n              paddingLeft: 10,\n              marginLeft: 15\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }\n          }), React.createElement(Body, {\n            style: {\n              paddingLeft: 0,\n              marginLeft: 0\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 1,\n            style: {\n              fontSize: 16,\n              marginTop: 3,\n              marginLeft: 20\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }\n          }, item.equipment_title)), React.createElement(Right, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            note: true,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }\n          }, React.createElement(Ionicons, {\n            name: \"ios-arrow-forward\",\n            style: {\n              fontSize: 16\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }\n          }))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 1\n        }\n      })));\n    }\n  }]);\n\n  return Equipments;\n}(Component);\n\nEquipments.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: \"\" + Strings.ST38,\n    headerLeft: function headerLeft() {\n      return React.createElement(Ionicons, {\n        name: 'md-arrow-back',\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        style: styles.lightarrowbackicon,\n        __self: Equipments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }\n      });\n    }\n  };\n};\n\nexport { Equipments as default };","map":{"version":3,"sources":["F:/Work/Anees/EA Fitness/app/application/screens/Equipments.js"],"names":["React","Component","AppPreLoader","Ionicons","LinearGradient","Grid","Row","Container","Text","Body","Right","List","ListView","Thumbnail","ListItem","ConfigApp","Strings","styles","require","Dimensions","get","height","width","Equipments","props","ListExercisesByEquipment","equipment_id","equipment_title","navigation","navigate","IdEquipment","TitleEquipment","state","isLoading","fetch","URL","then","response","json","responseJson","setState","dataSource","catch","error","console","background_general","item","paddingLeft","marginLeft","backgroundColor","opacity","marginVertical","borderColor","borderBottomWidth","bind","uri","equipment_image","fontSize","marginTop","index","toString","navigationOptions","title","ST38","headerLeft","goBack","lightarrowbackicon"],"mappings":"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","sourcesContent":[" import React, {Component} from 'react';\nimport AppPreLoader from '../components/AppPreLoader';\nimport{ ImageBackground, Dimensions, View, Image, SafeAreaView, FlatList, Button, ActivityIndicator, TouchableOpacity } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport {Grid, Row } from 'react-native-easy-grid';\nimport { Container, Text, Body, Right, List, ListView, Thumbnail, ListItem} from 'native-base';\n\nimport ConfigApp from '../utils/ConfigApp';\nimport Strings from '../utils/Strings';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class Equipments extends Component {\n  static navigationOptions = ({ navigation }) => ({\n    title: `${Strings.ST38}`,\n    headerLeft: () =>  <Ionicons name={'md-arrow-back'} onPress={ () => { navigation.goBack() }} style={styles.lightarrowbackicon}/>\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    \n       return fetch(ConfigApp.URL+'json/data_equipments.php')\n         .then((response) => response.json())\n         .then((responseJson) => {\n           this.setState({\n             isLoading: false,\n             dataSource: responseJson\n           }, function() {\n           });\n         })\n         .catch((error) => {\n           console.error(error);\n         });\n     }\n\nListExercisesByEquipment=(equipment_id, equipment_title)=>\n{\n      this.props.navigation.navigate('ExercisesByEquipmentScreen', { IdEquipment: equipment_id, TitleEquipment: equipment_title });    \n}\n\n  render() {\n\n    if (this.state.isLoading) {\n      return (\n        <AppPreLoader/>\n      );\n    }\n\n    return (\n\n<Container style={styles.background_general}>\n\n<List>\n\n<FlatList\n          data={ this.state.dataSource }\n          refreshing=\"false\"\n          renderItem={({item}) =>\n                \n            <ListItem style={{paddingLeft: 0, marginLeft: 0, backgroundColor:'#FFF', opacity: 1, marginVertical: 10, borderColor: 'rgba(0,0,0,0.05)', borderBottomWidth: 1}}  onPress={this.ListExercisesByEquipment.bind(this, item.equipment_id, item.equipment_title)} >\n              <Thumbnail square size={80} source={{ uri: ConfigApp.URL+'images/'+item.equipment_image }} style={{paddingLeft: 10, marginLeft: 15}} />\n              <Body style={{paddingLeft: 0, marginLeft: 0}}>\n                <Text numberOfLines={1} style={{fontSize: 16, marginTop: 3, marginLeft: 20}}>\n                {item.equipment_title}\n                </Text>\n              </Body>\n              <Right>\n                <Text note>\n                <Ionicons name=\"ios-arrow-forward\" style={{fontSize: 16}}/>\n                </Text>\n              </Right>\n            </ListItem>\n          \n}\n        keyExtractor={(item, index) => index.toString()}\n\n        /> \n        \n</List>\n \n</Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}