{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Content = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _jsxFileName = 'src/basic/Content.js';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactNativeKeyboardAwareScrollView = require('react-native-keyboard-aware-scroll-view');\n\nvar _nativeBaseShoutemTheme = require('native-base-shoutem-theme');\n\nvar _platform = require(\"../theme/variables/platform\");\n\nvar _platform2 = _interopRequireDefault(_platform);\n\nvar _mapPropsToStyleNames = require(\"../utils/mapPropsToStyleNames\");\n\nvar _mapPropsToStyleNames2 = _interopRequireDefault(_mapPropsToStyleNames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Content = function (_Component) {\n  _inherits(Content, _Component);\n\n  function Content(props) {\n    _classCallCheck(this, Content);\n\n    var _this = _possibleConstructorReturn(this, (Content.__proto__ || Object.getPrototypeOf(Content)).call(this, props));\n\n    _this.state = {\n      orientation: 'portrait'\n    };\n    return _this;\n  }\n\n  _createClass(Content, [{\n    key: 'layoutChange',\n    value: function layoutChange(val) {\n      var maxComp = Math.max(_platform2.default.deviceWidth, _platform2.default.deviceHeight);\n      if (val.width >= maxComp) this.setState({\n        orientation: 'landscape'\n      });else {\n        this.setState({\n          orientation: 'portrait'\n        });\n      }\n    }\n  }, {\n    key: 'calculateLeft',\n    value: function calculateLeft(mode, inSet) {\n      var inset = null;\n\n      if (inSet !== undefined) {\n        inset = inSet;\n      } else {\n        inset = _platform2.default.Inset;\n      }\n\n      var style = this.props.style;\n      var InsetValues = mode === 'portrait' ? inset.portrait : inset.landscape;\n      var leftPadder = null;\n\n      if (style[1] !== undefined) {\n        if (style[1].padding !== undefined || style[1].paddingLeft !== undefined) {\n          leftPadder = (style[1].paddingLeft !== undefined ? style[1].paddingLeft : style[1].padding) + InsetValues.leftInset;\n        }\n      } else if (style.padding !== undefined || style.paddingLeft !== undefined) {\n        leftPadder = (style.paddingLeft !== undefined ? style.paddingLeft : style.padding) + InsetValues.leftInset;\n      } else {\n        leftPadder = InsetValues.leftInset;\n      }\n\n      return leftPadder;\n    }\n  }, {\n    key: 'calculateRight',\n    value: function calculateRight(mode, inSet) {\n      var inset = null;\n\n      if (inSet !== undefined) {\n        inset = inSet;\n      } else {\n        inset = _platform2.default.Inset;\n      }\n\n      var style = this.props.style;\n      var InsetValues = mode === 'portrait' ? inset.portrait : inset.landscape;\n      var rightPadder = null;\n\n      if (style[1] !== undefined) {\n        if (style[1].padding !== undefined || style[1].paddingRight !== undefined) {\n          rightPadder = (style[1].paddingRight !== undefined ? style[1].paddingRight : style[1].padding) + InsetValues.rightInset;\n        }\n      } else if (style.padding !== undefined || style.paddingRight !== undefined) {\n        rightPadder = (style.paddingRight !== undefined ? style.paddingRight : style.padding) + InsetValues.rightInset;\n      } else {\n        rightPadder = InsetValues.rightInset;\n      }\n\n      return rightPadder;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          children = _props.children,\n          contentContainerStyle = _props.contentContainerStyle,\n          disableKBDismissScroll = _props.disableKBDismissScroll,\n          keyboardShouldPersistTaps = _props.keyboardShouldPersistTaps,\n          padder = _props.padder,\n          style = _props.style;\n      var variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : _platform2.default;\n      return variables.isIphoneX ? _react2.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, _extends({\n        automaticallyAdjustContentInsets: false,\n        resetScrollToCoords: disableKBDismissScroll ? null : {\n          x: 0,\n          y: 0\n        },\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps || 'handled',\n        ref: function ref(c) {\n          _this2._scrollview = c;\n          _this2._root = c;\n        }\n      }, this.props, {\n        onLayout: function onLayout(e) {\n          return _this2.layoutChange(e.nativeEvent.layout);\n        },\n        style: [style, {\n          paddingLeft: this.calculateLeft(this.state.orientation, variables.Inset),\n          paddingRight: this.calculateRight(this.state.orientation, variables.Inset)\n        }],\n        contentContainerStyle: [{\n          padding: padder ? variables.contentPadding : undefined\n        }, contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }), children) : _react2.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, _extends({\n        automaticallyAdjustContentInsets: false,\n        resetScrollToCoords: disableKBDismissScroll ? null : {\n          x: 0,\n          y: 0\n        },\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps || 'handled',\n        ref: function ref(c) {\n          _this2._scrollview = c;\n          _this2._root = c;\n        }\n      }, this.props, {\n        contentContainerStyle: [{\n          padding: padder ? variables.contentPadding : undefined\n        }, contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        }\n      }), children);\n    }\n  }]);\n\n  return Content;\n}(_react.Component);\n\nContent.contextTypes = {\n  theme: _propTypes2.default.object\n};\nContent.propTypes = {\n  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.number, _propTypes2.default.array]),\n  padder: _propTypes2.default.bool,\n  disableKBDismissScroll: _propTypes2.default.bool,\n  keyboardShouldPersistTaps: _propTypes2.default.string\n};\nvar StyledContent = (0, _nativeBaseShoutemTheme.connectStyle)('NativeBase.Content', {}, _mapPropsToStyleNames2.default)(Content);\nexports.Content = StyledContent;","map":{"version":3,"sources":["../../../src/basic/Content.js"],"names":["Content","Component","contextTypes","theme","PropTypes","orientation","val","maxComp","Math","variable","mode","inSet","inset","style","InsetValues","leftPadder","rightPadder","children","contentContainerStyle","disableKBDismissScroll","keyboardShouldPersistTaps","padder","variables","x","y","e","paddingLeft","paddingRight","padding","StyledContent","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Content extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: 'portrait'\n    };\n  }\n  layoutChange(val) {\n    const maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n    if (val.width >= maxComp) this.setState({ orientation: 'landscape' });\n    else {\n      this.setState({ orientation: 'portrait' });\n    }\n  }\n\n  calculateLeft(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const { style } = this.props;\n    const InsetValues = mode === 'portrait' ? inset.portrait : inset.landscape;\n    let leftPadder = null;\n    if (style[1] !== undefined) {\n      if (\n        style[1].padding !== undefined ||\n        style[1].paddingLeft !== undefined\n      ) {\n        leftPadder =\n          (style[1].paddingLeft !== undefined\n            ? style[1].paddingLeft\n            : style[1].padding) + InsetValues.leftInset;\n      }\n    } else if (style.padding !== undefined || style.paddingLeft !== undefined) {\n      leftPadder =\n        (style.paddingLeft !== undefined ? style.paddingLeft : style.padding) +\n        InsetValues.leftInset;\n    } else {\n      leftPadder = InsetValues.leftInset;\n    }\n    return leftPadder;\n  }\n  calculateRight(mode, inSet) {\n    let inset = null;\n    if (inSet !== undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const { style } = this.props;\n    const InsetValues = mode === 'portrait' ? inset.portrait : inset.landscape;\n    let rightPadder = null;\n    if (style[1] !== undefined) {\n      if (\n        style[1].padding !== undefined ||\n        style[1].paddingRight !== undefined\n      ) {\n        rightPadder =\n          (style[1].paddingRight !== undefined\n            ? style[1].paddingRight\n            : style[1].padding) + InsetValues.rightInset;\n      }\n    } else if (\n      style.padding !== undefined ||\n      style.paddingRight !== undefined\n    ) {\n      rightPadder =\n        (style.paddingRight !== undefined\n          ? style.paddingRight\n          : style.padding) + InsetValues.rightInset;\n    } else {\n      rightPadder = InsetValues.rightInset;\n    }\n    return rightPadder;\n  }\n  render() {\n    const {\n      children,\n      contentContainerStyle,\n      disableKBDismissScroll,\n      keyboardShouldPersistTaps,\n      padder,\n      style\n    } = this.props;\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    return variables.isIphoneX ? (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n        {...this.props}\n        onLayout={e => this.layoutChange(e.nativeEvent.layout)}\n        style={[\n          style,\n          {\n            paddingLeft: this.calculateLeft(\n              this.state.orientation,\n              variables.Inset\n            ),\n            paddingRight: this.calculateRight(\n              this.state.orientation,\n              variables.Inset\n            )\n          }\n        ]}\n        contentContainerStyle={[\n          { padding: padder ? variables.contentPadding : undefined },\n          contentContainerStyle\n        ]}\n      >\n        {children}\n      </KeyboardAwareScrollView>\n    ) : (\n      <KeyboardAwareScrollView\n        automaticallyAdjustContentInsets={false}\n        resetScrollToCoords={disableKBDismissScroll ? null : { x: 0, y: 0 }}\n        keyboardShouldPersistTaps={keyboardShouldPersistTaps || 'handled'}\n        ref={c => {\n          this._scrollview = c;\n          this._root = c;\n        }}\n        {...this.props}\n        contentContainerStyle={[\n          { padding: padder ? variables.contentPadding : undefined },\n          contentContainerStyle\n        ]}\n      >\n        {children}\n      </KeyboardAwareScrollView>\n    );\n  }\n}\n\nContent.propTypes = {\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  padder: PropTypes.bool,\n  disableKBDismissScroll: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.string\n};\n\nconst StyledContent = connectStyle(\n  'NativeBase.Content',\n  {},\n  mapPropsToStyleNames\n)(Content);\n\nexport { StyledContent as Content };\n"]},"metadata":{},"sourceType":"script"}