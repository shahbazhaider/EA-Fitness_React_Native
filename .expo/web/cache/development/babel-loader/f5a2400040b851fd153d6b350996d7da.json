{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Work\\\\Anees\\\\EA Fitness\\\\app\\\\application\\\\components\\\\QuotesFav.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport { NavigationActions, StackNavigator, withNavigation } from 'react-navigation';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { Grid, Row, Col } from 'react-native-easy-grid';\nimport { Container, Body, Thumbnail, Text, List, Right, Card, CardItem, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport ListEmpty from \"./ListEmpty\";\nimport Strings from \"../utils/Strings\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar QuotesFav = function (_React$Component) {\n  _inherits(QuotesFav, _React$Component);\n\n  var _super = _createSuper(QuotesFav);\n\n  function QuotesFav(props) {\n    var _this;\n\n    _classCallCheck(this, QuotesFav);\n\n    _this = _super.call(this, props);\n\n    _this.renderFooterQuotes = function () {\n      var quotes = _this.state.FavQuotes;\n      if (quotes.length != 0) return null;\n      return React.createElement(ListEmpty, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this.removeQuote = function _callee(quote_id) {\n      var user, quotes, quotesFav;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              user = firebase.auth().currentUser;\n              uid = user.uid;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('FavQuotes'));\n\n            case 5:\n              quotes = _context.sent;\n              quotesFav = JSON.parse(quotes);\n              quotesItems = quotesFav.filter(function (e) {\n                return e.quote_id !== quote_id && e.userId == uid;\n              });\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('FavQuotes', JSON.stringify(quotesItems)));\n\n            case 10:\n              _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                FavQuotes: quotesItems || []\n              }));\n\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n\n    _this.state = {\n      FavQuotes: []\n    };\n    return _this;\n  }\n\n  _createClass(QuotesFav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchQuotes();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.fetchQuotes();\n    }\n  }, {\n    key: \"onClickShare\",\n    value: function onClickShare(quote_title) {\n      Share.share({\n        message: quote_title\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 5,\n          marginTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 2\n        }\n      }, React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.FavQuotes,\n        refreshing: \"true\",\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(TouchableOpacity, {\n            activeOpacity: 1,\n            style: {\n              flex: 1\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }\n          }, React.createElement(View, {\n            style: {\n              margin: 5\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }\n          }, React.createElement(Card, {\n            style: {\n              minHeight: 60,\n              alignContent: 'center',\n              justifyContent: 'center',\n              paddingTop: 10,\n              elevation: 0,\n              shadowOpacity: 0\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }\n          }, React.createElement(CardItem, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }\n          }, React.createElement(Body, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }\n          }, item.quote_title))), React.createElement(Grid, {\n            style: {\n              margin: 15,\n              borderTopWidth: 1,\n              borderColor: '#eee',\n              paddingTop: 10\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }\n          }, React.createElement(Col, {\n            style: {\n              alignContent: 'center',\n              justifyContent: 'center'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }\n          }, React.createElement(TouchableOpacity, {\n            onPress: _this2.removeQuote.bind(_this2, item.quote_id),\n            activeOpacity: 1,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              color: '#666'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }\n          }, React.createElement(Icon, {\n            name: \"md-close\",\n            style: {\n              fontSize: 14,\n              color: '#f39c12'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }\n          }), \" \", Strings.ST59))), React.createElement(Col, {\n            style: {\n              alignContent: 'center',\n              justifyContent: 'center'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }\n          }, React.createElement(TouchableOpacity, {\n            onPress: _this2.onClickShare.bind(_this2, item.quote_title),\n            activeOpacity: 1,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            style: {\n              fontSize: 14,\n              color: '#666'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }\n          }, React.createElement(Icon, {\n            name: \"md-share\",\n            style: {\n              fontSize: 14,\n              color: '#f39c12'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }\n          }), \" \", Strings.ST58)))))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        ListFooterComponent: this.renderFooterQuotes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 1\n        }\n      }))));\n    }\n  }, {\n    key: \"fetchQuotes\",\n    value: function fetchQuotes() {\n      var user, quotesJSON, quotesFav, quotesArray;\n      return _regeneratorRuntime.async(function fetchQuotes$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user = firebase.auth().currentUser;\n              uid = user.uid;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('FavQuotes'));\n\n            case 4:\n              quotesJSON = _context2.sent;\n              quotesFav = JSON.parse(quotesJSON);\n              quotesItems = quotesFav.filter(function (e) {\n                return e.userId == uid;\n              });\n              quotesArray = quotesItems || [];\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                FavQuotes: quotesArray\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return QuotesFav;\n}(React.Component);\n\nexport default withNavigation(QuotesFav);","map":{"version":3,"sources":["F:/Work/Anees/EA Fitness/app/application/components/QuotesFav.js"],"names":["React","Component","firebase","NavigationActions","StackNavigator","withNavigation","AsyncStorage","Icon","Grid","Row","Col","Container","Body","Thumbnail","Text","List","Right","Card","CardItem","ListItem","ConfigApp","ListEmpty","Strings","styles","require","Dimensions","get","height","width","QuotesFav","props","renderFooterQuotes","quotes","state","FavQuotes","length","removeQuote","quote_id","user","auth","currentUser","uid","getItem","quotesFav","JSON","parse","quotesItems","filter","e","userId","setItem","stringify","setState","fetchQuotes","quote_title","Share","share","message","margin","marginTop","item","index","flex","minHeight","alignContent","justifyContent","paddingTop","elevation","shadowOpacity","borderTopWidth","borderColor","bind","fontSize","color","ST59","onClickShare","ST58","toString","quotesJSON","quotesArray"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport { NavigationActions, StackNavigator, withNavigation} from 'react-navigation';\nimport{AsyncStorage, TouchableOpacity, Dimensions, View, Image, ScrollView, FlatList} from 'react-native';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport {Grid, Row, Col } from 'react-native-easy-grid';\nimport { Container, Body, Thumbnail, Text, List, Right, Card, CardItem, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport ListEmpty from './ListEmpty';\nimport Strings from '../utils/Strings';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nclass QuotesFav extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      FavQuotes: []\n    }\n\n  }\n\n  componentDidMount () {\n    this.fetchQuotes();\n  }\n\n  componentDidUpdate () {\n    this.fetchQuotes();\n  }\n\nonClickShare(quote_title){\n  Share.share({\n    message: quote_title,\n  })\n}\n\n\n  renderFooterQuotes = () => {\n  const quotes = this.state.FavQuotes\n  if (quotes.length != 0) return null;\n\n\n  return (\n    <ListEmpty/>\n   );\n};\n\nremoveQuote = async (quote_id) => {\ntry {\n\nvar user = firebase.auth().currentUser;\nuid = user.uid;\n\nconst quotes = await AsyncStorage.getItem('FavQuotes');\nlet quotesFav = JSON.parse(quotes);\nquotesItems = quotesFav.filter(function(e){ return e.quote_id !== quote_id && e.userId == uid })\n\nawait AsyncStorage.setItem('FavQuotes', JSON.stringify(quotesItems));\n\nthis.setState({ \n...this.state, \nFavQuotes: quotesItems || [] \n}); \n\n} catch(error) {\n\n}}; \n\n  render () {\n\n    return (\n\n<ScrollView>\n <View style={{margin: 5, marginTop: 5}}> \n \n<List>\n\n\n<FlatList\n          data={this.state.FavQuotes}\n          refreshing=\"true\"\n          renderItem={({item, index}) =>\n                <TouchableOpacity activeOpacity={1} style={{flex: 1}}>\n                <View style={{margin: 5}}>\n                <Card style={{minHeight: 60, alignContent: 'center', justifyContent: 'center', paddingTop: 10, elevation: 0, shadowOpacity: 0}}>\n            <CardItem>\n              <Body>\n                <Text>{item.quote_title}</Text>\n              </Body>\n            </CardItem>\n            <Grid style={{margin: 15, borderTopWidth: 1, borderColor: '#eee', paddingTop: 10}}>\n              \n              <Col style={{alignContent: 'center', justifyContent: 'center'}}>\n              <TouchableOpacity onPress={this.removeQuote.bind(this, item.quote_id)} activeOpacity={1}>\n              <Text style={{fontSize: 14, color: '#666'}}>\n              <Icon name=\"md-close\" style={{fontSize: 14, color: '#f39c12'}}/> {Strings.ST59}</Text>\n              </TouchableOpacity>\n              </Col>\n\n              <Col style={{alignContent: 'center', justifyContent: 'center'}}>\n              <TouchableOpacity onPress={this.onClickShare.bind(this, item.quote_title)} activeOpacity={1}>\n              <Text style={{fontSize: 14, color: '#666'}}>\n              <Icon name=\"md-share\" style={{fontSize: 14, color: '#f39c12'}}/> {Strings.ST58}</Text>\n              </TouchableOpacity>\n              </Col>\n\n            </Grid>\n          </Card>\n                </View>\n                </TouchableOpacity>\n}\n        keyExtractor={(item, index) => index.toString()}\n        ListFooterComponent={this.renderFooterQuotes}\n\n\n        />\n\n</List>\n\n  </View> \n</ScrollView>\n    )\n  }\n\n\n    async fetchQuotes () {\n      var user = firebase.auth().currentUser;\n      uid = user.uid;\n\n      let quotesJSON= await AsyncStorage.getItem('FavQuotes');\n      let quotesFav = JSON.parse(quotesJSON);\n      quotesItems = quotesFav.filter(function(e){\n            return e.userId == uid\n        })\n      const quotesArray = quotesItems || [];\n      this.setState({\n        ...this.state,\n        FavQuotes: quotesArray\n      });\n  }\n\n}\n\nexport default withNavigation(QuotesFav);\n"]},"metadata":{},"sourceType":"module"}