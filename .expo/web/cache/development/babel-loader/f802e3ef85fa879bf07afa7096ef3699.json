{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Work\\\\Anees\\\\EA Fitness\\\\app\\\\application\\\\screens\\\\WorkoutsByLevel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport AppPreLoader from \"../components/AppPreLoader\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { Grid, Row } from 'react-native-easy-grid';\nimport { Container, Text } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar WorkoutsByLevel = function (_Component) {\n  _inherits(WorkoutsByLevel, _Component);\n\n  var _super = _createSuper(WorkoutsByLevel);\n\n  function WorkoutsByLevel(props) {\n    var _this;\n\n    _classCallCheck(this, WorkoutsByLevel);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(WorkoutsByLevel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch(ConfigApp.URL + 'json/data_wlevel.php?level=' + this.props.navigation.state.params.IdLevel).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          isLoading: false,\n          dataSource: responseJson\n        }, function () {});\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"WorkoutDetails\",\n    value: function WorkoutDetails(item) {\n      var navigateAction = NavigationActions.navigate({\n        routeName: 'WorkoutDetailsScreen',\n        params: {\n          item: item\n        }\n      });\n      this.props.navigation.dispatch(navigateAction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var params = this.props.navigation.state.params;\n      var IdLevel = params ? params.IdLevel : null;\n      return React.createElement(Container, {\n        style: styles.background_general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        refreshing: \"false\",\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.WorkoutDetails(item);\n            },\n            activeOpacity: 1,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }\n          }, React.createElement(ImageBackground, {\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.workout_image\n            },\n            style: styles.background_card,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }\n          }, React.createElement(LinearGradient, {\n            colors: ['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.9)'],\n            style: styles.gradient_card,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }\n          }, React.createElement(Text, {\n            style: styles.category_card,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }\n          }, item.goal_title), React.createElement(Text, {\n            style: styles.title_card,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }\n          }, item.workout_title), React.createElement(Text, {\n            style: styles.subcategory_card,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }\n          }, item.level_title))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return WorkoutsByLevel;\n}(Component);\n\nWorkoutsByLevel.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    title: \"\" + navigation.state.params.TitleLevel,\n    headerLeft: function headerLeft() {\n      return React.createElement(Ionicons, {\n        name: 'md-arrow-back',\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        style: styles.lightarrowbackicon,\n        __self: WorkoutsByLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }\n      });\n    },\n    headerRight: function headerRight() {\n      return React.createElement(Ionicons, {\n        name: 'md-search',\n        onPress: function onPress() {\n          return navigation.navigate('WorkoutSearchScreen');\n        },\n        style: styles.lightarrowbackiconRight,\n        __self: WorkoutsByLevel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      });\n    }\n  };\n};\n\nexport { WorkoutsByLevel as default };","map":{"version":3,"sources":["F:/Work/Anees/EA Fitness/app/application/screens/WorkoutsByLevel.js"],"names":["React","Component","NavigationActions","StackNavigator","AppPreLoader","Ionicons","LinearGradient","Grid","Row","Container","Text","ConfigApp","styles","require","Dimensions","get","height","width","WorkoutsByLevel","props","state","isLoading","fetch","URL","navigation","params","IdLevel","then","response","json","responseJson","setState","dataSource","catch","error","console","item","navigateAction","navigate","routeName","dispatch","background_general","WorkoutDetails","uri","workout_image","background_card","gradient_card","category_card","goal_title","title_card","workout_title","subcategory_card","level_title","index","toString","navigationOptions","title","TitleLevel","headerLeft","goBack","lightarrowbackicon","headerRight","lightarrowbackiconRight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,kBAAlD;AACA,OAAOC,YAAP;;;;;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAAQC,IAAR,EAAcC,GAAd,QAAyB,wBAAzB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAA+B,aAA/B;AAEA,OAAOC,SAAP;;AAEA,IAAIC,MAAM,GAAGC,OAAO,6BAApB;;sBACsBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAjBC,M,mBAAAA,M;IAAQC,K,mBAAAA,K;;IAEQC,e;;;;;AAOnB,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAFiB;AAKlB;;;;WAED,6BAAoB;AAAA;;AAEf,aAAOC,KAAK,CAACX,SAAS,CAACY,GAAV,GAAc,6BAAd,GAA4C,KAAKJ,KAAL,CAAWK,UAAX,CAAsBJ,KAAtB,CAA4BK,MAA5B,CAAmCC,OAAhF,CAAL,CACJC,IADI,CACC,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADD,EAEJF,IAFI,CAEC,UAACG,YAAD,EAAkB;AACtB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZV,UAAAA,SAAS,EAAE,KADC;AAEZW,UAAAA,UAAU,EAAEF;AAFA,SAAd,EAGG,YAAW,CACb,CAJD;AAKD,OARI,EASJG,KATI,CASE,UAACC,KAAD,EAAW;AAChBC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAXI,CAAP;AAYD;;;WAEJ,wBAAgBE,IAAhB,EAAsB;AACpB,UAAMC,cAAc,GAAGnC,iBAAiB,CAACoC,QAAlB,CAA2B;AAChDC,QAAAA,SAAS,EAAE,sBADqC;AAEhDd,QAAAA,MAAM,EAAE;AAACW,UAAAA,IAAI,EAAJA;AAAD;AAFwC,OAA3B,CAAvB;AAIA,WAAKjB,KAAL,CAAWK,UAAX,CAAsBgB,QAAtB,CAA+BH,cAA/B;AACD;;;WAED,kBAAS;AAAA;;AAEP,UAAI,KAAKjB,KAAL,CAAWC,SAAf,EAA0B;AACxB,eACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;AANM,UAQCI,MARD,GAQY,KAAKN,KAAL,CAAWK,UAAX,CAAsBJ,KARlC,CAQCK,MARD;AASP,UAAMC,OAAO,GAAGD,MAAM,GAAGA,MAAM,CAACC,OAAV,GAAoB,IAA1C;AAEA,aACJ,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEd,MAAM,CAAC6B,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,QAAD;AACE,QAAA,IAAI,EAAG,KAAKrB,KAAL,CAAWY,UADpB;AAEE,QAAA,UAAU,EAAC,OAFb;AAGE,QAAA,UAAU,EAAE;AAAA,cAAEI,IAAF,QAAEA,IAAF;AAAA,iBACN,oBAAC,gBAAD;AAAkB,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACM,cAAL,CAAoBN,IAApB,CAAN;AAAA,aAA3B;AAA4D,YAAA,aAAa,EAAE,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,eAAD;AAAiB,YAAA,MAAM,EAAE;AAACO,cAAAA,GAAG,EAAEhC,SAAS,CAACY,GAAV,GAAc,SAAd,GAAwBa,IAAI,CAACQ;AAAnC,aAAzB;AAA4E,YAAA,KAAK,EAAEhC,MAAM,CAACiC,eAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,cAAD;AAAgB,YAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,iBAApB,CAAxB;AAAgE,YAAA,KAAK,EAAEjC,MAAM,CAACkC,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACQ,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAElC,MAAM,CAACmC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoCX,IAAI,CAACY,UAAzC,CADR,EAEQ,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEpC,MAAM,CAACqC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiCb,IAAI,CAACc,aAAtC,CAFR,EAGQ,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEtC,MAAM,CAACuC,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuCf,IAAI,CAACgB,WAA5C,CAHR,CADJ,CADA,CADM;AAAA,SAHd;AAcA,QAAA,YAAY,EAAE,sBAAChB,IAAD,EAAOiB,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SAdd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,CADI;AAsBD;;;;EAvE0CrD,S;;AAAxBiB,e,CACXqC,iB,GAAoB;AAAA,MAAG/B,UAAH,SAAGA,UAAH;AAAA,SAAqB;AAC/CgC,IAAAA,KAAK,OAAKhC,UAAU,CAACJ,KAAX,CAAiBK,MAAjB,CAAwBgC,UADa;AAE/CC,IAAAA,UAAU,EAAE;AAAA,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,eAAhB;AAAiC,QAAA,OAAO,EAAG,mBAAM;AAAElC,UAAAA,UAAU,CAACmC,MAAX;AAAqB,SAAxE;AAA0E,QAAA,KAAK,EAAE/C,MAAM,CAACgD,kBAAxF;AAAA,gBAHF1C,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAA,KAFmC;AAG/C2C,IAAAA,WAAW,EAAE;AAAA,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,WAAhB;AAA6B,QAAA,OAAO,EAAE;AAAA,iBAAMrC,UAAU,CAACc,QAAX,CAAoB,qBAApB,CAAN;AAAA,SAAtC;AAAwF,QAAA,KAAK,EAAE1B,MAAM,CAACkD,uBAAtG;AAAA,gBAJH5C,eAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAA;AAHkC,GAArB;AAAA,C;;SADTA,e","sourcesContent":["import React, {Component} from 'react';\nimport { NavigationActions, StackNavigator } from 'react-navigation';\nimport AppPreLoader from '../components/AppPreLoader';\nimport { ImageBackground, Dimensions, View, TouchableOpacity, FlatList, Button, ActivityIndicator, ScrollView } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport {Grid, Row } from 'react-native-easy-grid';\nimport { Container, Text} from 'native-base';\n\nimport ConfigApp from '../utils/ConfigApp';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nexport default class WorkoutsByLevel extends Component {\n   static navigationOptions = ({ navigation }) => ({\n    title: `${navigation.state.params.TitleLevel}`,\n    headerLeft: () =>  <Ionicons name={'md-arrow-back'} onPress={ () => { navigation.goBack() }} style={styles.lightarrowbackicon}/>,\n    headerRight: () =>  <Ionicons name={'md-search'} onPress={() => navigation.navigate('WorkoutSearchScreen')} style={styles.lightarrowbackiconRight}/>\n    });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n    };\n  }\n\n  componentDidMount() {\n    \n       return fetch(ConfigApp.URL+'json/data_wlevel.php?level='+this.props.navigation.state.params.IdLevel)\n         .then((response) => response.json())\n         .then((responseJson) => {\n           this.setState({\n             isLoading: false,\n             dataSource: responseJson\n           }, function() {\n           });\n         })\n         .catch((error) => {\n           console.error(error);\n         });\n     }\n\n  WorkoutDetails (item) {\n    const navigateAction = NavigationActions.navigate({\n      routeName: 'WorkoutDetailsScreen',\n      params: {item}\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  render() {\n\n    if (this.state.isLoading) {\n      return (\n        <AppPreLoader/>\n      );\n    }\n\n    const { params } = this.props.navigation.state;\n    const IdLevel = params ? params.IdLevel : null;\n\n    return (\n<Container style={styles.background_general}>\n        <FlatList\n          data={ this.state.dataSource }\n          refreshing=\"false\"\n          renderItem={({item}) => \n                <TouchableOpacity onPress={() => this.WorkoutDetails(item)} activeOpacity={1}>\n                <ImageBackground source={{uri: ConfigApp.URL+'images/'+item.workout_image}} style={styles.background_card}>\n                    <LinearGradient colors={['rgba(0,0,0,0.6)', 'rgba(0,0,0,0.9)']} style={styles.gradient_card}>\n                            <Text style={styles.category_card}>{item.goal_title}</Text>\n                            <Text style={styles.title_card}>{item.workout_title}</Text>\n                            <Text style={styles.subcategory_card}>{item.level_title}</Text>\n                    </LinearGradient>\n                </ImageBackground>\n                </TouchableOpacity>\n}\n        keyExtractor={(item, index) => index.toString()}\n        \n\n        />\n</Container>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}