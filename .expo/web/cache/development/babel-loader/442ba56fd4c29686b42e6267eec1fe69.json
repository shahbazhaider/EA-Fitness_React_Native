{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Work\\\\Anees\\\\EA Fitness\\\\app\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { Root } from \"native-base\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport AppPreLoader from \"./application/components/AppPreLoader\";\nimport firebaseConfig from \"./application/utils/Firebase\";\nimport * as firebase from 'firebase';\nfirebase.initializeApp(firebaseConfig);\nimport GuestNavigation from \"./application/navigations/Guest\";\nimport LoggedNavigation from \"./application/navigations/Logged\";\nLogBox.ignoreAllLogs();\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      isLogged: false,\n      loaded: false,\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"_loadAssetsAsync\",\n    value: function _loadAssetsAsync() {\n      var imageAssets;\n      return _regeneratorRuntime.async(function _loadAssetsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              imageAssets = cacheImages([require(\"./assets/images/bg.jpg\"), require(\"./assets/images/goals.jpg\"), require(\"./assets/images/levels.jpg\"), require(\"./assets/images/header.jpg\"), require(\"./assets/images/bodyparts.jpg\"), require(\"./assets/images/equipments.jpg\"), require(\"./assets/images/logo.png\"), require(\"./assets/images/logo_dark.png\"), require(\"./assets/images/workouts.png\"), require(\"./assets/images/exercises.png\"), require(\"./assets/images/calculator.png\"), require(\"./assets/images/diets.png\"), require(\"./assets/images/store.png\"), require(\"./assets/images/chrono.png\"), require(\"./assets/images/sets.png\"), require(\"./assets/images/reps.png\"), require(\"./assets/images/star.png\"), require(\"./assets/images/avatar.png\"), require(\"./assets/images/bookmarked.png\"), require(\"./assets/images/emptylist.png\"), require(\"./assets/images/avatar.jpg\"), require(\"./assets/images/restday.png\"), require(\"./assets/images/blog.png\"), require(\"./assets/images/quotes.png\"), require(\"./assets/images/checked.png\"), require(\"./assets/images/nointernet.png\"), require(\"./assets/images/empty-star.png\"), require(\"./assets/images/half-star.png\")]);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(imageAssets)));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              LogBox.ignoreAllLogs();\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Roboto_medium: require(\"native-base/Fonts/Roboto_medium.ttf\"),\n                anticon: require(\"@expo/vector-icons/Fonts/AntDesign.ttf\"),\n                'AntDesign': require(\"@expo/vector-icons/Fonts/AntDesign.ttf\"),\n                'Entypo': require(\"@expo/vector-icons/Fonts/Entypo.ttf\"),\n                'FontAwesome': require(\"@expo/vector-icons/Fonts/FontAwesome.ttf\"),\n                'Ionicons': require(\"@expo/vector-icons/Fonts/Ionicons.ttf\"),\n                'MaterialCommunityIcons': require(\"@expo/vector-icons/Fonts/MaterialCommunityIcons.ttf\"),\n                'SimpleLineIcons': require(\"@expo/vector-icons/Fonts/SimpleLineIcons.ttf\"),\n                'FontAwesome': require(\"@expo/vector-icons/Fonts/FontAwesome.ttf\")\n              }));\n\n            case 3:\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(firebase.auth().onAuthStateChanged(function (user) {\n                if (user !== null) {\n                  _this2.setState({\n                    isLogged: true,\n                    loaded: true\n                  });\n                } else {\n                  _this2.setState({\n                    isLogged: false,\n                    loaded: true\n                  });\n                }\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.isReady) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadAssetsAsync,\n          onFinish: function onFinish() {\n            return _this3.setState({\n              isReady: true\n            });\n          },\n          onError: console.warn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }\n        });\n      }\n\n      var _this$state = this.state,\n          isLogged = _this$state.isLogged,\n          loaded = _this$state.loaded,\n          isReady = _this$state.isReady;\n\n      if (!loaded) {\n        return React.createElement(AppPreLoader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }\n        });\n      }\n\n      if (isLogged && isReady) {\n        return React.createElement(Root, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }\n        }, React.createElement(StatusBar, {\n          barStyle: \"light-content\",\n          backgroundColor: \"#ce8512\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }\n        }), React.createElement(LoggedNavigation, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }\n        }));\n      } else {\n        return React.createElement(Root, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 9\n          }\n        }, React.createElement(StatusBar, {\n          hidden: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }\n        }), React.createElement(GuestNavigation, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }\n        }));\n      }\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["F:/Work/Anees/EA Fitness/app/App.js"],"names":["React","Asset","Font","AppLoading","Root","LogBox","AppPreLoader","firebaseConfig","firebase","initializeApp","GuestNavigation","LoggedNavigation","ignoreAllLogs","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","App","state","isLogged","loaded","isReady","imageAssets","require","Promise","all","loadAsync","Roboto_medium","anticon","auth","onAuthStateChanged","user","setState","_loadAssetsAsync","console","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { Root } from \"native-base\";\nimport { StatusBar, LogBox } from \"react-native\";\nimport AppPreLoader from \"./application/components/AppPreLoader\";\nimport firebaseConfig from './application/utils/Firebase';\nimport * as firebase from 'firebase';\nfirebase.initializeApp(firebaseConfig);\n\nimport GuestNavigation from './application/navigations/Guest';\nimport LoggedNavigation from './application/navigations/Logged';\n\nLogBox.ignoreAllLogs();\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nexport default class App extends React.Component {\n\tconstructor () {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tisLogged: false,\n\t\t\tloaded: false,\n\t\t\tisReady: false,\n\t\t}\n\t}\n\nasync _loadAssetsAsync() {\n    const imageAssets = cacheImages([\n      require('./assets/images/bg.jpg'),\n      require('./assets/images/goals.jpg'),\n      require('./assets/images/levels.jpg'),\n      require('./assets/images/header.jpg'),\n      require('./assets/images/bodyparts.jpg'),\n      require('./assets/images/equipments.jpg'),\n      require('./assets/images/logo.png'),\n      require('./assets/images/logo_dark.png'),\n      require('./assets/images/workouts.png'),\n      require('./assets/images/exercises.png'),\n      require('./assets/images/calculator.png'),\n      require('./assets/images/diets.png'),\n      require('./assets/images/store.png'),\n      require('./assets/images/chrono.png'),\n      require('./assets/images/sets.png'),\n      require('./assets/images/reps.png'),\n      require('./assets/images/star.png'),\n      require('./assets/images/avatar.png'),\n      require('./assets/images/bookmarked.png'),\n      require('./assets/images/emptylist.png'),\n      require('./assets/images/avatar.jpg'),\n      require('./assets/images/restday.png'),\n      require('./assets/images/blog.png'),\n      require('./assets/images/quotes.png'),\n      require('./assets/images/checked.png'),\n      require('./assets/images/nointernet.png'),\n      require('./assets/images/empty-star.png'),\n      require('./assets/images/half-star.png')\n    ]);\n\n    await Promise.all([...imageAssets]);\n  }\n\n  async componentDidMount () {\n\n      LogBox.ignoreAllLogs();\n\n      await Font.loadAsync({\n      Roboto_medium: require(\"native-base/Fonts/Roboto_medium.ttf\"),\n      anticon: require('react-native-vector-icons/Fonts/AntDesign.ttf'),\n      'AntDesign': require('react-native-vector-icons/Fonts/AntDesign.ttf'),\n      'Entypo': require('react-native-vector-icons/Fonts/Entypo.ttf'),\n      'FontAwesome': require('react-native-vector-icons/Fonts/FontAwesome.ttf'),\n      'Ionicons': require('react-native-vector-icons/Fonts/Ionicons.ttf'),\n      'MaterialCommunityIcons': require('react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf'),\n      'SimpleLineIcons': require('react-native-vector-icons/Fonts/SimpleLineIcons.ttf'),\n      'FontAwesome': require('react-native-vector-icons/Fonts/FontAwesome.ttf')\n    });\n\n\t\tawait firebase.auth().onAuthStateChanged((user) => {\n\t\t\tif(user !== null) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLogged: true,\n\t\t\t\t\tloaded: true\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLogged: false,\n\t\t\t\t\tloaded: true\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\n\t}\n\n\trender() {\n\n\t\t    if (!this.state.isReady) {\n      return (\n        <AppLoading\n          startAsync={this._loadAssetsAsync}\n          onFinish={() => this.setState({ isReady: true })}\n          onError={console.warn}\n        />\n      );\n    }\n\n\t\tconst {isLogged, loaded, isReady} = this.state;\n\n\t\tif ( ! loaded) {\n\t\t\treturn (\n        <AppPreLoader/>\n        );\n\t\t}\n\n\t\tif(isLogged && isReady) {\n\t\t\treturn (\n        <Root>\n        <StatusBar barStyle=\"light-content\" backgroundColor=\"#ce8512\" />\n        <LoggedNavigation />\n        </Root>\n        );\n\t\t} else {\n\t\t\treturn (\n        <Root>\n        <StatusBar hidden />\n        <GuestNavigation />\n        </Root>\n        );\n\t\t}\n\t}\n}\n\n\n"]},"metadata":{},"sourceType":"module"}