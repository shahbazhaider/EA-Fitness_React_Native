{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Work\\\\Anees\\\\EA Fitness\\\\app\\\\application\\\\components\\\\CalcSlider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationActions, StackNavigator, withNavigation } from 'react-navigation';\nimport { Slider } from \"react-native-web/dist/index\";\n\nvar CalcSlider = function (_Component) {\n  _inherits(CalcSlider, _Component);\n\n  var _super = _createSuper(CalcSlider);\n\n  function CalcSlider(props) {\n    var _this;\n\n    _classCallCheck(this, CalcSlider);\n\n    _this = _super.call(this, props);\n\n    _this.onChange = function (value) {\n      _this.props.onChange(_this.state.value);\n\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.state = {\n      value: props.value\n    };\n    return _this;\n  }\n\n  _createClass(CalcSlider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Slider, {\n        value: this.state.value,\n        minimumValue: this.props.min,\n        maximumValue: this.props.max,\n        step: this.props.step,\n        onValueChange: this.onChange.bind(this),\n        minimumTrackTintColor: \"#f39c12\",\n        thumbTintColor: \"#f39c12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return CalcSlider;\n}(Component);\n\nCalcSlider.defaultProps = {\n  min: 0,\n  max: 245,\n  step: 1\n};\nexport default withNavigation(CalcSlider);","map":{"version":3,"sources":["F:/Work/Anees/EA Fitness/app/application/components/CalcSlider.js"],"names":["React","Component","NavigationActions","StackNavigator","withNavigation","Slider","CalcSlider","props","onChange","value","state","setState","min","max","step","bind","defaultProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,EAA4CC,cAA5C,QAAiE,kBAAjE;SACQC,M;;IAEFC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAOnBC,QAPmB,GAOR,UAACC,KAAD,EAAW;AAElB,YAAKF,KAAL,CAAWC,QAAX,CAAoB,MAAKE,KAAL,CAAWD,KAA/B;;AACA,YAAKE,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACH,KAXkB;;AAEf,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAEF,KAAK,CAACE;AADF,KAAb;AAFe;AAKlB;;;;WAeD,kBAAS;AACP,aACI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADtB;AAEI,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWK,GAF7B;AAGI,QAAA,YAAY,EAAE,KAAKL,KAAL,CAAWM,GAH7B;AAII,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,IAJrB;AAKI,QAAA,aAAa,EAAE,KAAKN,QAAL,CAAcO,IAAd,CAAmB,IAAnB,CALnB;AAMI,QAAA,qBAAqB,EAAC,SAN1B;AAOI,QAAA,cAAc,EAAC,SAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAaD;;;;EAnCsBd,S;;AAAnBK,U,CAeGU,Y,GAAe;AAClBJ,EAAAA,GAAG,EAAE,CADa;AAElBC,EAAAA,GAAG,EAAE,GAFa;AAGlBC,EAAAA,IAAI,EAAE;AAHY,C;AAuBxB,eAAeV,cAAc,CAACE,UAAD,CAA7B","sourcesContent":["import React, { Component } from 'react';\nimport { NavigationActions, StackNavigator, withNavigation} from 'react-navigation';\nimport{ Slider} from 'react-native';\n\nclass CalcSlider extends Component {\n  constructor(props) {\n      super(props); \n      this.state = {\n        value: props.value\n      }\n  }\n\n  onChange = (value) => {\n      //pass state to parent component in app.js\n      this.props.onChange(this.state.value); \n      this.setState({ value: value }); \n  }\n\n\n  static defaultProps = {\n      min: 0, \n      max: 245, \n      step: 1\n  }\n\n  render() {\n    return (\n        <Slider \n            value={this.state.value}\n            minimumValue={this.props.min}\n            maximumValue={this.props.max}\n            step={this.props.step} \n            onValueChange={this.onChange.bind(this)}\n            minimumTrackTintColor=\"#f39c12\"\n            thumbTintColor=\"#f39c12\"\n\n\n        />\n    );\n  }\n}\n\nexport default withNavigation(CalcSlider)"]},"metadata":{},"sourceType":"module"}