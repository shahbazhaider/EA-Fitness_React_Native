{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"F:\\\\Work\\\\Anees\\\\EA Fitness\\\\app\\\\application\\\\components\\\\PostFav.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as firebase from 'firebase';\nimport { NavigationActions, StackNavigator, withNavigation } from 'react-navigation';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Icon from \"@expo/vector-icons/SimpleLineIcons\";\nimport { Container, Body, Thumbnail, Text, List, Right, ListItem } from 'native-base';\nimport ConfigApp from \"../utils/ConfigApp\";\nimport ListEmpty from \"./ListEmpty\";\n\nvar styles = require(\"../../assets/files/Styles\");\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar PostFav = function (_React$Component) {\n  _inherits(PostFav, _React$Component);\n\n  var _super = _createSuper(PostFav);\n\n  function PostFav(props) {\n    var _this;\n\n    _classCallCheck(this, PostFav);\n\n    _this = _super.call(this, props);\n\n    _this.renderFooterPosts = function () {\n      var posts = _this.state.posts;\n      if (posts.length != 0) return null;\n      return React.createElement(ListEmpty, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this.removePost = function _callee(post_id) {\n      var user, posts, postsFav;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              user = firebase.auth().currentUser;\n              uid = user.uid;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('posts'));\n\n            case 5:\n              posts = _context.sent;\n              postsFav = JSON.parse(posts);\n              postsItems = postsFav.filter(function (e) {\n                return e.post_id !== post_id && e.userId == uid;\n              });\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('posts', JSON.stringify(postsItems)));\n\n            case 10:\n              _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                posts: postsItems || []\n              }));\n\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 13]], Promise);\n    };\n\n    _this.state = {\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(PostFav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPosts();\n    }\n  }, {\n    key: \"PostDetails\",\n    value: function PostDetails(item) {\n      var navigateAction = NavigationActions.navigate({\n        routeName: 'PostDetailsScreen',\n        params: {\n          item: item\n        }\n      });\n      this.props.navigation.dispatch(navigateAction);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 1\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 5,\n          marginTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 2\n        }\n      }, React.createElement(List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 1\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.posts,\n        refreshing: \"true\",\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(ListItem, {\n            style: {\n              paddingLeft: 0,\n              marginLeft: 0,\n              backgroundColor: '#FFF',\n              opacity: 1,\n              borderColor: 'rgba(0,0,0,0.05)',\n              borderBottomWidth: 1\n            },\n            onPress: function onPress() {\n              return _this2.PostDetails(item);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 1\n            }\n          }, React.createElement(Thumbnail, {\n            square: true,\n            size: 80,\n            source: {\n              uri: ConfigApp.URL + 'images/' + item.post_image\n            },\n            style: {\n              paddingLeft: 10,\n              marginLeft: 10,\n              borderRadius: 6\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }\n          }), React.createElement(Body, {\n            style: {\n              paddingLeft: 0,\n              marginLeft: 0\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            numberOfLines: 2,\n            style: {\n              fontSize: 14,\n              marginBottom: 3\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }\n          }, item.post_title)), React.createElement(Right, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }\n          }, React.createElement(TouchableOpacity, {\n            onPress: _this2.removePost.bind(_this2, item.post_id),\n            activeOpacity: 1,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            note: true,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }\n          }, React.createElement(Icon, {\n            name: \"close\",\n            style: {\n              fontSize: 19\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }\n          })))));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        ListFooterComponent: this.renderFooterPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 1\n        }\n      }))));\n    }\n  }, {\n    key: \"fetchPosts\",\n    value: function fetchPosts() {\n      var user, postsJSON, postsFav, postsArray;\n      return _regeneratorRuntime.async(function fetchPosts$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user = firebase.auth().currentUser;\n              uid = user.uid;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('posts'));\n\n            case 4:\n              postsJSON = _context2.sent;\n              postsFav = JSON.parse(postsJSON);\n              postsItems = postsFav.filter(function (e) {\n                return e.userId == uid;\n              });\n              postsArray = postsItems || [];\n              this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n                posts: postsArray\n              }));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return PostFav;\n}(React.Component);\n\nexport default withNavigation(PostFav);","map":{"version":3,"sources":["F:/Work/Anees/EA Fitness/app/application/components/PostFav.js"],"names":["React","Component","firebase","NavigationActions","StackNavigator","withNavigation","AsyncStorage","Icon","Container","Body","Thumbnail","Text","List","Right","ListItem","ConfigApp","ListEmpty","styles","require","Dimensions","get","height","width","PostFav","props","renderFooterPosts","posts","state","length","removePost","post_id","user","auth","currentUser","uid","getItem","postsFav","JSON","parse","postsItems","filter","e","userId","setItem","stringify","setState","fetchPosts","item","navigateAction","navigate","routeName","params","navigation","dispatch","margin","marginTop","index","paddingLeft","marginLeft","backgroundColor","opacity","borderColor","borderBottomWidth","PostDetails","uri","URL","post_image","borderRadius","fontSize","marginBottom","post_title","bind","toString","postsJSON","postsArray"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,iBAAT,EAA4BC,cAA5B,EAA4CC,cAA5C,QAAiE,kBAAjE;SACOC,Y;;;;;;;AACP,OAAOC,IAAP;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,SAA1B,EAAqCC,IAArC,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwDC,QAAxD,QAAuE,aAAvE;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP;;AAEA,IAAIC,MAAM,GAAGC,OAAO,6BAApB;;sBACsBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAjBC,M,mBAAAA,M;IAAQC,K,mBAAAA,K;;IAEPC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,8BAAMA,KAAN;;AAFiB,UAsBnBC,iBAtBmB,GAsBC,YAAM;AAC1B,UAAMC,KAAK,GAAG,MAAKC,KAAL,CAAWD,KAAzB;AACA,UAAIA,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAO,IAAP;AAGvB,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KA9BoB;;AAAA,UAgCrBC,UAhCqB,GAgCR,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGTC,cAAAA,IAHS,GAGF7B,QAAQ,CAAC8B,IAAT,GAAgBC,WAHd;AAIbC,cAAAA,GAAG,GAAGH,IAAI,CAACG,GAAX;AAJa;AAAA,+CAMO5B,YAAY,CAAC6B,OAAb,CAAqB,OAArB,CANP;;AAAA;AAMPT,cAAAA,KANO;AAOTU,cAAAA,QAPS,GAOEC,IAAI,CAACC,KAAL,CAAWZ,KAAX,CAPF;AAQba,cAAAA,UAAU,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAASC,CAAT,EAAW;AAAE,uBAAOA,CAAC,CAACX,OAAF,KAAcA,OAAd,IAAyBW,CAAC,CAACC,MAAF,IAAYR,GAA5C;AAAiD,eAA9E,CAAb;AARa;AAAA,+CAUP5B,YAAY,CAACqC,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeL,UAAf,CAA9B,CAVO;;AAAA;AAYb,oBAAKM,QAAL,iCACG,MAAKlB,KADR;AAEAD,gBAAAA,KAAK,EAAEa,UAAU,IAAI;AAFrB;;AAZa;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhCQ;;AAIjB,UAAKZ,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAJiB;AAQlB;;;;WAED,6BAAqB;AACnB,WAAKoB,UAAL;AACD;;;WAED,qBAAaC,IAAb,EAAmB;AACjB,UAAMC,cAAc,GAAG7C,iBAAiB,CAAC8C,QAAlB,CAA2B;AAChDC,QAAAA,SAAS,EAAE,mBADqC;AAEhDC,QAAAA,MAAM,EAAE;AAACJ,UAAAA,IAAI,EAAJA;AAAD;AAFwC,OAA3B,CAAvB;AAIA,WAAKvB,KAAL,CAAW4B,UAAX,CAAsBC,QAAtB,CAA+BL,cAA/B;AACD;;;WAiCD,kBAAU;AAAA;;AAER,aAEJ,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACM,UAAAA,MAAM,EAAE,CAAT;AAAYC,UAAAA,SAAS,EAAE;AAAvB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAED,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,QAAD;AACU,QAAA,IAAI,EAAE,KAAK5B,KAAL,CAAWD,KAD3B;AAEU,QAAA,UAAU,EAAC,MAFrB;AAGU,QAAA,UAAU,EAAE;AAAA,cAAEqB,IAAF,QAAEA,IAAF;AAAA,cAAQS,KAAR,QAAQA,KAAR;AAAA,iBAEtB,oBAAC,QAAD;AAAU,YAAA,KAAK,EAAE;AAACC,cAAAA,WAAW,EAAE,CAAd;AAAiBC,cAAAA,UAAU,EAAE,CAA7B;AAAgCC,cAAAA,eAAe,EAAC,MAAhD;AAAwDC,cAAAA,OAAO,EAAE,CAAjE;AAAoEC,cAAAA,WAAW,EAAE,kBAAjF;AAAqGC,cAAAA,iBAAiB,EAAE;AAAxH,aAAjB;AAA8I,YAAA,OAAO,EAAE;AAAA,qBAAM,MAAI,CAACC,WAAL,CAAiBhB,IAAjB,CAAN;AAAA,aAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACc,oBAAC,SAAD;AAAW,YAAA,MAAM,MAAjB;AAAkB,YAAA,IAAI,EAAE,EAAxB;AAA4B,YAAA,MAAM,EAAE;AAAEiB,cAAAA,GAAG,EAAEjD,SAAS,CAACkD,GAAV,GAAc,SAAd,GAAwBlB,IAAI,CAACmB;AAApC,aAApC;AAAsF,YAAA,KAAK,EAAE;AAACT,cAAAA,WAAW,EAAE,EAAd;AAAkBC,cAAAA,UAAU,EAAE,EAA9B;AAAkCS,cAAAA,YAAY,EAAE;AAAhD,aAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADd,EAEc,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACV,cAAAA,WAAW,EAAE,CAAd;AAAiBC,cAAAA,UAAU,EAAE;AAA7B,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,aAAa,EAAE,CAArB;AAAwB,YAAA,KAAK,EAAE;AAACU,cAAAA,QAAQ,EAAE,EAAX;AAAeC,cAAAA,YAAY,EAAE;AAA7B,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACCtB,IAAI,CAACuB,UADN,CADF,CAFd,EAOc,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,gBAAD;AAAkB,YAAA,OAAO,EAAE,MAAI,CAACzC,UAAL,CAAgB0C,IAAhB,CAAqB,MAArB,EAA2BxB,IAAI,CAACjB,OAAhC,CAA3B;AAAqE,YAAA,aAAa,EAAE,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,OAAX;AAAmB,YAAA,KAAK,EAAE;AAACsC,cAAAA,QAAQ,EAAE;AAAX,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADF,CADA,CAPd,CAFsB;AAAA,SAHtB;AAwBQ,QAAA,YAAY,EAAE,sBAACrB,IAAD,EAAOS,KAAP;AAAA,iBAAiBA,KAAK,CAACgB,QAAN,EAAjB;AAAA,SAxBtB;AAyBQ,QAAA,mBAAmB,EAAE,KAAK/C,iBAzBlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,CAFC,CADD,CAFI;AA4CD;;;WAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AACMM,cAAAA,IADN,GACa7B,QAAQ,CAAC8B,IAAT,GAAgBC,WAD7B;AAEEC,cAAAA,GAAG,GAAGH,IAAI,CAACG,GAAX;AAFF;AAAA,+CAIuB5B,YAAY,CAAC6B,OAAb,CAAqB,OAArB,CAJvB;;AAAA;AAIMsC,cAAAA,SAJN;AAKMrC,cAAAA,QALN,GAKiBC,IAAI,CAACC,KAAL,CAAWmC,SAAX,CALjB;AAMElC,cAAAA,UAAU,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAASC,CAAT,EAAW;AAClC,uBAAOA,CAAC,CAACC,MAAF,IAAYR,GAAnB;AACH,eAFU,CAAb;AAGMwC,cAAAA,UATR,GASqBnC,UAAU,IAAI,EATnC;AAUE,mBAAKM,QAAL,iCACK,KAAKlB,KADV;AAEED,gBAAAA,KAAK,EAAEgD;AAFT;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;EAvGkB1E,KAAK,CAACC,S;;AAyH5B,eAAeI,cAAc,CAACkB,OAAD,CAA7B","sourcesContent":["import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport { NavigationActions, StackNavigator, withNavigation} from 'react-navigation';\nimport{AsyncStorage, TouchableOpacity, Dimensions, View, Image, ScrollView, FlatList} from 'react-native';\nimport Icon from 'react-native-vector-icons/SimpleLineIcons';\nimport { Container, Body, Thumbnail, Text, List, Right, ListItem} from 'native-base';\nimport ConfigApp from '../utils/ConfigApp';\nimport ListEmpty from './ListEmpty';\n\nvar styles = require('../../assets/files/Styles');\nvar {height, width} = Dimensions.get('window');\n\nclass PostFav extends React.Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n      posts: []\n    }\n\n  }\n\n  componentDidMount () {\n    this.fetchPosts();\n  }\n\n  PostDetails (item) {\n    const navigateAction = NavigationActions.navigate({\n      routeName: 'PostDetailsScreen',\n      params: {item}\n    });\n    this.props.navigation.dispatch(navigateAction);\n  }\n\n  renderFooterPosts = () => {\n  const posts = this.state.posts\n  if (posts.length != 0) return null;\n\n\n  return (\n    <ListEmpty/>\n   );\n};\n\nremovePost = async (post_id) => {\ntry {\n\nvar user = firebase.auth().currentUser;\nuid = user.uid;\n\nconst posts = await AsyncStorage.getItem('posts');\nlet postsFav = JSON.parse(posts);\npostsItems = postsFav.filter(function(e){ return e.post_id !== post_id && e.userId == uid })\n\nawait AsyncStorage.setItem('posts', JSON.stringify(postsItems));\n\nthis.setState({ \n...this.state, \nposts: postsItems || [] \n}); \n\n} catch(error) {\n\n}}; \n\n  render () {\n\n    return (\n\n<ScrollView>\n <View style={{margin: 5, marginTop: 5}}> \n\n<List>\n\n\n<FlatList\n          data={this.state.posts}\n          refreshing=\"true\"\n          renderItem={({item, index}) =>\n\n<ListItem style={{paddingLeft: 0, marginLeft: 0, backgroundColor:'#FFF', opacity: 1, borderColor: 'rgba(0,0,0,0.05)', borderBottomWidth: 1}}  onPress={() => this.PostDetails(item)} >\n              <Thumbnail square size={80} source={{ uri: ConfigApp.URL+'images/'+item.post_image }} style={{paddingLeft: 10, marginLeft: 10, borderRadius: 6}} />\n              <Body style={{paddingLeft: 0, marginLeft: 0}}>\n                <Text numberOfLines={2} style={{fontSize: 14, marginBottom: 3}}>\n                {item.post_title}\n                </Text>\n              </Body>\n              <Right>\n              <TouchableOpacity onPress={this.removePost.bind(this, item.post_id)} activeOpacity={1}>\n                <Text note>\n                <Icon name=\"close\" style={{fontSize: 19}}/>\n                </Text>\n                </TouchableOpacity>\n\n              </Right>\n            </ListItem>\n\n          \n}\n        keyExtractor={(item, index) => index.toString()}\n        ListFooterComponent={this.renderFooterPosts}\n\n\n        /> \n\n</List>\n\n  </View> \n</ScrollView>\n\n    )\n  }\n\n    async fetchPosts () {\n      var user = firebase.auth().currentUser;\n      uid = user.uid;\n\n      let postsJSON= await AsyncStorage.getItem('posts');\n      let postsFav = JSON.parse(postsJSON);\n      postsItems = postsFav.filter(function(e){\n            return e.userId == uid\n        })\n      const postsArray = postsItems || [];\n      this.setState({\n        ...this.state,\n        posts: postsArray\n      });\n  }\n\n}\n\nexport default withNavigation(PostFav);\n"]},"metadata":{},"sourceType":"module"}